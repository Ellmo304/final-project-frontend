"use strict";function Auth(e,r){e.loginUrl=r+"/login",e.signupUrl=r+"/register",e.tokenPrefix=""}function RegisterController(e,r){function t(){e.signup(n.user).then(function(){r.go("login")})}var n=this;n.user={},n.submit=t}function LoginController(e,r){function t(){e.login(n.credentials).then(function(){r.go("usersIndex")})}var n=this;n.credentials={},n.submit=t}function Garden(e,r){return new e(r+"/gardens/:id",{id:"@id"},{update:{method:"PUT"}})}function GardensNewController(e,r,t){function n(){e.save(o.garden,function(e){r.go("imagesNew",{id:e.id})})}var o=this;o.garden={},o.garden.user_id=t.getPayload().id,o.create=n}function GardensIndexController(e){var r=this;r.all=e.query()}function GardensShowController(e,r,t){function n(){o.garden.$remove(function(){r.go("gardensIndex")})}var o=this;this.isLoggedIn=t.isAuthenticated,o.garden=e.get(r.params),this.deleteGarden=n}function GardensEditController(e,r){function t(){n.garden.$update(function(){r.go("gardensShow",r.params)})}var n=this;n.garden=e.get(r.params),n.update=t}function Image(e,r){return new e(r+"/images/:id",{id:"@id"},{update:{method:"PUT"}})}function ImagesNewController(e,r){function t(){e.save(n.image,function(){r.reload()})}var n=this;n.image={},n.image.garden_id=r.params.id,n.create=t}function Item(e,r){return new e(r+"/items/:id",{id:"@id"},{update:{method:"PUT"}})}function ItemsNewController(e,r){function t(){e.save(n.item,function(){r.reload()})}var n=this;n.item={},n.item.garden_id=r.params.id,n.create=t}function MainController(e,r,t){function n(){e.logout().then(function(){r.go("usersIndex")})}function o(t,n,o){(!e.isAuthenticated()&&s.includes(n.name)||"usersEdit"===n.name&&parseFloat(o.id)!==e.getPayload().id)&&(t.preventDefault(),r.go("login"))}var l=this;l.isLoggedIn=e.isAuthenticated,l.message=null;var s=["usersEdit"];t.$on("$stateChangeStart",o),l.logout=n}function Router(e,r){e.state("usersIndex",{url:"/users",templateUrl:"/templates/usersIndex.html",controller:"UsersIndexController as usersIndex"}).state("usersShow",{url:"/users/:id",templateUrl:"/templates/usersShow.html",controller:"UsersShowController as usersShow"}).state("usersEdit",{url:"/users/:id/edit",templateUrl:"/templates/usersEdit.html",controller:"UsersEditController as usersEdit"}).state("gardensNew",{url:"/gardens/new",templateUrl:"/templates/gardensNew.html",controller:"GardensNewController as gardensNew"}).state("gardensIndex",{url:"/gardens",templateUrl:"/templates/gardensIndex.html",controller:"GardensIndexController as gardensIndex"}).state("gardensShow",{url:"/gardens/:id",templateUrl:"/templates/gardensShow.html",controller:"GardensShowController as gardensShow"}).state("gardensEdit",{url:"/gardens/:id/edit",templateUrl:"/templates/gardensEdit.html",controller:"GardensEditController as gardensEdit"}).state("imagesNew",{url:"/gardens/:id/imagesNew",templateUrl:"/templates/imagesNew.html",controller:"ImagesNewController as imagesNew"}).state("items",{url:"/gardens/:id/items",templateUrl:"/templates/itemsNew.html",controller:"ItemsNewController as itemsNew"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}),r.otherwise("/users")}function User(e,r){return new e(r+"/users/:id",{id:"@id"},{update:{method:"PUT"}})}function UsersIndexController(e){var r=this;r.all=e.query()}function UsersShowController(e,r,t){function n(){l.user.$remove(function(){r.go("usersIndex")})}function o(){return t.getPayload().id===Number(r.params.id)}var l=this;this.isLoggedIn=t.isAuthenticated,l.user=e.get(r.params),l.isCurrentUser=o,l.user=e.get(r.params),l.deleteUser=n}function UsersEditController(e,r){function t(){n.user.$update(function(){r.go("usersShow",r.params)})}var n=this;n.user=e.get(r.params),n.update=t}angular.module("finalProject",["ngResource","ui.router","satellizer"]).constant("API_URL","http://localhost:3000/api").config(Auth),Auth.$inject=["$authProvider","API_URL"],angular.module("finalProject").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state"],LoginController.$inject=["$auth","$state"],angular.module("finalProject").factory("Garden",Garden),Garden.$inject=["$resource","API_URL"],angular.module("finalProject").controller("GardensNewController",GardensNewController).controller("GardensIndexController",GardensIndexController).controller("GardensShowController",GardensShowController).controller("GardensEditController",GardensEditController),GardensNewController.$inject=["Garden","$state","$auth"],GardensIndexController.$inject=["Garden"],GardensShowController.$inject=["Garden","$state","$auth"],GardensEditController.$inject=["Garden","$state"],angular.module("finalProject").factory("Image",Image),Image.$inject=["$resource","API_URL"],angular.module("finalProject").controller("ImagesNewController",ImagesNewController),ImagesNewController.$inject=["Image","$state"],angular.module("finalProject").factory("Item",Item),Item.$inject=["$resource","API_URL"],angular.module("finalProject").controller("ItemsNewController",ItemsNewController),ItemsNewController.$inject=["Item","$state"],angular.module("finalProject").controller("MainController",MainController),MainController.$inject=["$auth","$state","$rootScope"],angular.module("finalProject").config(Router),Router.$inject=["$stateProvider","$urlRouterProvider"],angular.module("finalProject").factory("User",User),User.$inject=["$resource","API_URL"],angular.module("finalProject").controller("UsersIndexController",UsersIndexController).controller("UsersShowController",UsersShowController).controller("UsersEditController",UsersEditController),UsersIndexController.$inject=["User"],UsersShowController.$inject=["User","$state","$auth"],UsersEditController.$inject=["User","$state"];
//# sourceMappingURL=app.js.map
